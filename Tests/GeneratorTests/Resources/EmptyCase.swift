//
// This is a generated file, do not edit!
// Generated by BuildConfig.swift, see https://github.com/417-72KI/BuildConfig.swift
//

import Foundation

struct BuildConfig: Codable {
    static let `default`: BuildConfig = .load()
}

private extension BuildConfig {
    static func load() -> BuildConfig {
        load(from: rawData)
    }
}

extension BuildConfig {
    static func load(from filePath: String) -> BuildConfig {
        do {
            let data = try Data(contentsOf: URL(fileURLWithPath: filePath))
            return load(from: data)
        } catch {
            fatalError("\(filePath) is invalid. cause: \(error)")
        }
    }

    static func load(from data: Data) -> BuildConfig {
        do {
            return try PropertyListDecoder().decode(BuildConfig.self, from: data)
        } catch {
            fatalError("Invalid data (\(String(data: data, encoding: .utf8) ?? ""). cause: \(error)")
        }
    }
}

private let rawData = Data(base64Encoded: "YnBsaXN0MDDQCAAAAAAAAAEBAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAJ")!
