//
// This is a generated file, do not edit!
// Generated by BuildConfig.swift, see https://github.com/417-72KI/BuildConfig.swift
//

import Foundation

struct BuildConfig: Codable {
    static let `default`: BuildConfig = .load()

    let aStruct: AStruct
    let bStruct: BStruct

    enum CodingKeys: String, CodingKey {
        case aStruct = "a_struct"
        case bStruct = "b_struct"
    }
}

private extension BuildConfig {
    static func load() -> BuildConfig {
        guard let filePath = Bundle.main.path(forResource: "BuildConfig", ofType: "plist") else { fatalError("BuildConfig.plist not found") }
        return load(from: filePath)
    }
}

extension BuildConfig {
    static func load(from filePath: String) -> BuildConfig {
        do {
            let data = try Data(contentsOf: URL(fileURLWithPath: filePath))
            return try PropertyListDecoder().decode(BuildConfig.self, from: data)
        } catch {
            fatalError("\(filePath) is invalid. cause: \(error)")
        }
    }
}

extension BuildConfig {
    struct AStruct: Codable {
    }
}

extension BuildConfig {
    struct BStruct: Codable {
        let hoge: String

        enum CodingKeys: String, CodingKey {
            case hoge
        }
    }
}
